$comment
	File created using the following command:
		vcd file decoder_controle.msim.vcd -direction
$end
$date
	Sun Sep 12 23:13:41 2021
$end
$version
	ModelSim Version 2020.1
$end
$timescale
	1ps
$end

$scope module computador_vhd_vec_tst $end
$var wire 1 ! CLOCK_50 $end
$var wire 1 " KEY [3] $end
$var wire 1 # KEY [2] $end
$var wire 1 $ KEY [1] $end
$var wire 1 % KEY [0] $end
$var wire 1 & LEDR [9] $end
$var wire 1 ' LEDR [8] $end
$var wire 1 ( LEDR [7] $end
$var wire 1 ) LEDR [6] $end
$var wire 1 * LEDR [5] $end
$var wire 1 + LEDR [4] $end
$var wire 1 , LEDR [3] $end
$var wire 1 - LEDR [2] $end
$var wire 1 . LEDR [1] $end
$var wire 1 / LEDR [0] $end
$var wire 1 0 SW [9] $end
$var wire 1 1 SW [8] $end
$var wire 1 2 SW [7] $end
$var wire 1 3 SW [6] $end
$var wire 1 4 SW [5] $end
$var wire 1 5 SW [4] $end
$var wire 1 6 SW [3] $end
$var wire 1 7 SW [2] $end
$var wire 1 8 SW [1] $end
$var wire 1 9 SW [0] $end

$scope module i1 $end
$var wire 1 : gnd $end
$var wire 1 ; vcc $end
$var wire 1 < unknown $end
$var wire 1 = devoe $end
$var wire 1 > devclrn $end
$var wire 1 ? devpor $end
$var wire 1 @ ww_devoe $end
$var wire 1 A ww_devclrn $end
$var wire 1 B ww_devpor $end
$var wire 1 C ww_CLOCK_50 $end
$var wire 1 D ww_KEY [3] $end
$var wire 1 E ww_KEY [2] $end
$var wire 1 F ww_KEY [1] $end
$var wire 1 G ww_KEY [0] $end
$var wire 1 H ww_SW [9] $end
$var wire 1 I ww_SW [8] $end
$var wire 1 J ww_SW [7] $end
$var wire 1 K ww_SW [6] $end
$var wire 1 L ww_SW [5] $end
$var wire 1 M ww_SW [4] $end
$var wire 1 N ww_SW [3] $end
$var wire 1 O ww_SW [2] $end
$var wire 1 P ww_SW [1] $end
$var wire 1 Q ww_SW [0] $end
$var wire 1 R ww_LEDR [9] $end
$var wire 1 S ww_LEDR [8] $end
$var wire 1 T ww_LEDR [7] $end
$var wire 1 U ww_LEDR [6] $end
$var wire 1 V ww_LEDR [5] $end
$var wire 1 W ww_LEDR [4] $end
$var wire 1 X ww_LEDR [3] $end
$var wire 1 Y ww_LEDR [2] $end
$var wire 1 Z ww_LEDR [1] $end
$var wire 1 [ ww_LEDR [0] $end
$var wire 1 \ \CLOCK_50~input_o\ $end
$var wire 1 ] \KEY[1]~input_o\ $end
$var wire 1 ^ \KEY[2]~input_o\ $end
$var wire 1 _ \SW[4]~input_o\ $end
$var wire 1 ` \SW[5]~input_o\ $end
$var wire 1 a \LEDR[0]~output_o\ $end
$var wire 1 b \LEDR[1]~output_o\ $end
$var wire 1 c \LEDR[2]~output_o\ $end
$var wire 1 d \LEDR[3]~output_o\ $end
$var wire 1 e \LEDR[4]~output_o\ $end
$var wire 1 f \LEDR[5]~output_o\ $end
$var wire 1 g \LEDR[6]~output_o\ $end
$var wire 1 h \LEDR[7]~output_o\ $end
$var wire 1 i \LEDR[8]~output_o\ $end
$var wire 1 j \LEDR[9]~output_o\ $end
$var wire 1 k \KEY[0]~input_o\ $end
$var wire 1 l \PC|DOUT[0]~3_combout\ $end
$var wire 1 m \KEY[3]~input_o\ $end
$var wire 1 n \PC|DOUT[1]~0_combout\ $end
$var wire 1 o \PC|DOUT[2]~1_combout\ $end
$var wire 1 p \PC|DOUT[3]~2_combout\ $end
$var wire 1 q \ROM|memROM~2_combout\ $end
$var wire 1 r \ROM|memROM~1_combout\ $end
$var wire 1 s \ROM|memROM~0_combout\ $end
$var wire 1 t \SW[6]~input_o\ $end
$var wire 1 u \ULA1|Add0~18_cout\ $end
$var wire 1 v \ULA1|Add0~1_sumout\ $end
$var wire 1 w \SW[0]~input_o\ $end
$var wire 1 x \DECODER|Equal0~0_combout\ $end
$var wire 1 y \SW[7]~input_o\ $end
$var wire 1 z \ULA1|Add0~2\ $end
$var wire 1 { \ULA1|Add0~5_sumout\ $end
$var wire 1 | \SW[1]~input_o\ $end
$var wire 1 } \SW[8]~input_o\ $end
$var wire 1 ~ \ULA1|Add0~6\ $end
$var wire 1 !! \ULA1|Add0~9_sumout\ $end
$var wire 1 "! \SW[2]~input_o\ $end
$var wire 1 #! \SW[9]~input_o\ $end
$var wire 1 $! \ULA1|Add0~10\ $end
$var wire 1 %! \ULA1|Add0~13_sumout\ $end
$var wire 1 &! \SW[3]~input_o\ $end
$var wire 1 '! \DECODER|OP_ULA~0_combout\ $end
$var wire 1 (! \REG_A|DOUT\ [3] $end
$var wire 1 )! \REG_A|DOUT\ [2] $end
$var wire 1 *! \REG_A|DOUT\ [1] $end
$var wire 1 +! \REG_A|DOUT\ [0] $end
$var wire 1 ,! \PC|DOUT\ [3] $end
$var wire 1 -! \PC|DOUT\ [2] $end
$var wire 1 .! \PC|DOUT\ [1] $end
$var wire 1 /! \PC|DOUT\ [0] $end
$var wire 1 0! \REG_A|ALT_INV_DOUT\ [3] $end
$var wire 1 1! \REG_A|ALT_INV_DOUT\ [2] $end
$var wire 1 2! \REG_A|ALT_INV_DOUT\ [1] $end
$var wire 1 3! \REG_A|ALT_INV_DOUT\ [0] $end
$var wire 1 4! \PC|ALT_INV_DOUT\ [3] $end
$var wire 1 5! \PC|ALT_INV_DOUT\ [2] $end
$var wire 1 6! \PC|ALT_INV_DOUT\ [1] $end
$var wire 1 7! \PC|ALT_INV_DOUT\ [0] $end
$var wire 1 8! \ROM|ALT_INV_memROM~0_combout\ $end
$var wire 1 9! \ROM|ALT_INV_memROM~1_combout\ $end
$var wire 1 :! \ROM|ALT_INV_memROM~2_combout\ $end
$var wire 1 ;! \DECODER|ALT_INV_Equal0~0_combout\ $end
$var wire 1 <! \ALT_INV_SW[9]~input_o\ $end
$var wire 1 =! \ALT_INV_SW[8]~input_o\ $end
$var wire 1 >! \ALT_INV_SW[7]~input_o\ $end
$var wire 1 ?! \ALT_INV_SW[6]~input_o\ $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
x!
0:
1;
x<
1=
1>
1?
1@
1A
1B
xC
x\
x]
x^
x_
x`
0a
0b
0c
0d
0e
0f
0g
1h
0i
0j
0k
1l
1m
0n
0o
0p
1q
0r
0s
1t
1u
1v
0w
1x
1y
0z
0{
0|
0}
0~
1!!
0"!
0#!
0$!
1%!
0&!
0'!
18!
19!
0:!
0;!
1<!
1=!
0>!
0?!
1"
x#
x$
0%
00
01
12
13
x4
x5
06
07
08
09
1D
xE
xF
0G
0H
0I
1J
1K
xL
xM
0N
0O
0P
0Q
0R
0S
1T
0U
0V
0W
0X
0Y
0Z
0[
0(!
0)!
0*!
0+!
0,!
0-!
0.!
0/!
10!
11!
12!
13!
14!
15!
16!
17!
0&
0'
1(
0)
0*
0+
0,
0-
0.
0/
$end
#75000
1%
1G
1k
1/!
07!
0l
1n
0q
1r
1s
08!
09!
1:!
0u
0v
1z
0x
1{
0!!
0%!
1'!
1;!
1i
1j
0{
1~
1v
0z
1S
1R
1{
0~
1!!
1'
1&
1g
0h
0!!
1U
0T
1)
0(
#150000
0%
0G
0k
#225000
1%
1G
1k
0/!
1.!
1+!
1*!
02!
03!
06!
17!
1l
0v
1z
0{
1~
1b
1a
1!!
1{
1Z
1[
1/
1.
#300000
0%
0G
0k
#375000
1%
1G
1k
1/!
0+!
1)!
01!
13!
07!
0l
0n
1o
1v
0z
0!!
1$!
1c
0a
1%!
0{
1Y
0[
0/
1-
#450000
0%
0G
0k
#525000
1%
1G
1k
0/!
0.!
1-!
1+!
0*!
0)!
1(!
00!
11!
12!
03!
05!
16!
17!
1l
0s
0v
1z
1{
0~
1!!
0$!
0%!
18!
1d
0c
0b
1a
1%!
0!!
0{
1~
1u
1v
0z
1{
0~
1!!
0%!
0'!
1X
0Y
0Z
1[
0!!
1$!
1/
0.
0-
1,
1!!
0$!
0{
0v
1z
1%!
1{
0%!
0g
0U
0)
#540000
11
02
03
0K
0J
1I
1}
0y
0t
1?!
1>!
0=!
0!!
0{
1~
1v
1!!
#600000
0%
0G
0k
#675000
1%
1G
1k
1/!
1)!
0(!
10!
01!
07!
0l
1n
0r
0!!
1$!
1%!
19!
0d
1c
0%!
0X
1Y
1-
0,
0i
0j
0S
0R
0'
0&
#750000
0%
0G
0k
#825000
1%
1G
1k
0/!
1.!
06!
17!
1l
#900000
0%
0G
0k
#975000
1%
1G
1k
1/!
07!
0l
0n
0o
1p
#1000000
